events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 無料枠制限をシミュレート
    limit_req_zone $binary_remote_addr zone=free_tier:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ログ設定
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 無料枠帯域制限シミュレート
    limit_rate 1m;  # 1MB/s制限

    # フロントエンド (Vercel無料枠シミュレート)
    upstream webapp {
        server webapp:3000;
    }

    # バックエンド (Railway/Render無料枠シミュレート)
    upstream strapi {
        server strapi:1337;
    }

    server {
        listen 80;
        server_name localhost;

        # 無料枠制限適用
        limit_req zone=free_tier burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;

        # セキュリティヘッダー
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Free-Tier "Simulated" always;

        # フロントエンド (Next.js)
        location / {
            proxy_pass http://webapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 無料枠タイムアウト制限
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API (Strapi)
        location /api/ {
            proxy_pass http://strapi/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API制限 (無料枠)
            limit_req zone=free_tier burst=5 nodelay;
            
            # 無料枠タイムアウト制限
            proxy_connect_timeout 15s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        # Strapi Admin
        location /admin/ {
            proxy_pass http://strapi/admin/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 静的ファイル (制限付き)
        location /uploads/ {
            proxy_pass http://strapi/uploads/;
            
            # 画像配信制限 (無料枠)
            limit_rate 500k;  # 500KB/s制限
        }

        # ヘルスチェック
        location /health {
            access_log off;
            return 200 "Free Tier OK\n";
            add_header Content-Type text/plain;
        }

        # 無料枠制限情報
        location /limits {
            return 200 '{"tier":"free","requests_per_second":10,"bandwidth":"1MB/s","timeout":"30s"}';
            add_header Content-Type application/json;
        }
    }

    # 監視用 (無料枠)
    server {
        listen 9090;
        server_name localhost;

        location /metrics {
            proxy_pass http://monitoring:9100/metrics;
            
            # 監視API制限
            limit_req zone=free_tier burst=2 nodelay;
        }
    }
} 