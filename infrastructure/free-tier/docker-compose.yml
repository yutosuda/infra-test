version: '3.8'

services:
  # PostgreSQL データベース (無料枠シミュレート)
  postgres:
    image: postgres:15-alpine
    container_name: free-postgres
    environment:
      POSTGRES_DB: strapi_db
      POSTGRES_USER: strapi_user
      POSTGRES_PASSWORD: strapi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - free-network
    restart: unless-stopped
    # 無料枠制限をシミュレート
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Strapi アプリケーション (Railway/Render無料枠シミュレート)
  strapi:
    build:
      context: ../../strapi-app
      dockerfile: ../infrastructure/free-tier/Dockerfile.strapi
    container_name: free-strapi
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi_db
      DATABASE_USERNAME: strapi_user
      DATABASE_PASSWORD: strapi_password
      DATABASE_SSL: false
      JWT_SECRET: free-tier-jwt-secret
      ADMIN_JWT_SECRET: free-tier-admin-jwt-secret
      APP_KEYS: key1,key2,key3,key4
      API_TOKEN_SALT: free-tier-api-token-salt
      TRANSFER_TOKEN_SALT: free-tier-transfer-token-salt
      # 無料枠制限
      STRAPI_DISABLE_UPDATE_NOTIFICATION: true
      STRAPI_HIDE_STARTUP_MESSAGE: true
    volumes:
      - strapi_uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - free-network
    depends_on:
      - postgres
    restart: unless-stopped
    # Railway/Render無料枠制限をシミュレート
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Next.js Webアプリケーション (Vercel無料枠シミュレート)
  webapp:
    build:
      context: ../../web-app
      dockerfile: ../infrastructure/free-tier/Dockerfile.webapp
    container_name: free-webapp
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_STRAPI_URL: http://localhost:1337
      # Vercel環境変数シミュレート
      VERCEL: 1
      VERCEL_ENV: production
    ports:
      - "3000:3000"
    networks:
      - free-network
    depends_on:
      - strapi
    restart: unless-stopped
    # Vercel無料枠制限をシミュレート
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # 無料枠監視ダッシュボード
  monitoring:
    image: prom/node-exporter:latest
    container_name: free-monitoring
    ports:
      - "9100:9100"
    networks:
      - free-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

  # 無料枠制限シミュレーター
  limiter:
    image: nginx:alpine
    container_name: free-limiter
    volumes:
      - ./nginx-free.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - free-network
    depends_on:
      - webapp
      - strapi
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  strapi_uploads:
    driver: local

networks:
  free-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 